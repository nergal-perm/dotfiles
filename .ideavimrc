source ~/.vimrc

let mapleader = " "

set relativenumber
set idearefactormode=keep
set ideajoin
set clipboard+=ideaput
set showmode
set keep-english-in-normal-and-restore-in-insert

noremap <Esc> <nop>
nmap <S-Enter> O<Esc>
nmap <CR> o<Esc>

" Navigation
nnoremap gi :action GotoImplementation<CR>
nnoremap gd :action GotoDeclaration<CR>
nnoremap gr :action RecentFiles<CR> 
nnoremap gs :action GotoSupermethod<CR>
nnoremap gb :action Back<CR>
nnoremap W :action EditorNextWordInDifferentHumpsMode<CR>
nnoremap B :action EditorPreviousWordInDifferentHumpsMode<CR>
vnoremap W :action EditorNextWordInDifferentHumpsModeWithSelection<CR>
vnoremap B :action EditorPreviousWordInDifferentHumpsModeWithSelection<CR>

" Editing
vnoremap es :action SurroundWith<CR>
nnoremap eg :action Generate<CR>
nnoremap er :action Refactorings.QuickListPopupAction<CR>
vnoremap er :action Refactorings.QuickListPopupAction<CR>
nnoremap ef :action ReformatCode<CR>
vnoremap ef :action ReformatCode<CR>
nnoremap eo :action OptimizeImports<CR>
nnoremap <C-j> :m +1<CR>
nnoremap <C-k> :m -2<CR>
inoremap <C-j> <Esc>:m +1<CR>i
inoremap <C-k> <Esc>:m -2<CR>i

" Searching
set hlsearch
nnoremap <leader>sh :nohlsearch<CR>

" system clipboard
vmap <leader>y "+y
vmap <leader>d "+d
nmap <leader>y "+yy
nmap <leader>p "+p
nmap <leader>P "+P
vmap <leader>p "+p
vmap <leader>P "+P

" VCS operations 
nnoremap dc :action CheckinProject<CR>
nnoremap du :action Vcs.UpdateProject<CR>
nnoremap dg :action Vcs.QuickListPopupAction<CR>

" View
nnoremap si :action QuickImplementations<CR>
nnoremap sd :action QuickJavaDoc<CR>
nnoremap sf :action SelectInProjectView<CR>
nnoremap ss :action FileStructurePopup<CR>
nnoremap sp :action ParameterInfo<CR>
nnoremap sj :action ToggleRenderedDocPresentationForAll<CR>

" Misc
nnoremap cn :action CloseAllNotifications<CR>

" Split view
:nnoremap wr :action StretchSplitToRight<CR>
:nnoremap wl :action StretchSplitToLeft<CR>
:nnoremap wt :action StretchSplitToTop<CR>
:nnoremap wb :action StretchSplitToBottom<CR>

" Build and Run
nnoremap db :action MakeModule<CR>
nnoremap dr :action ChooseRunConfiguration<CR>

" extensions
set surround

set NERDTree
let g:NERDTreeMapActivateNode='l'
let g:NERDTreeMapJumpParent='h'
